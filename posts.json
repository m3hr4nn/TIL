[
    {
        "category": "programming",
        "title": "test-post",
        "path": "programming/test-post.md",
        "html": "<h1>My update TIL Post</h1>\n<p>Today I learned about GitHub Actions and how they can automate README updates.</p>\n<p>This is really useful for maintaining documentation automatically.</p>",
        "updated": "2025-07-28T20:04:26.566147"
    },
    {
        "category": "programming",
        "title": "webapplication-building",
        "path": "programming/webapplication-building.md",
        "html": "<h1>Creating Web Applications with JavaScript</h1>\n<p>JavaScript (JS) is a powerful programming language that runs in web browsers and allows developers to create interactive web applications.</p>\n<hr />\n<h2>1. Basic Structure</h2>\n<p>A web application usually consists of:</p>\n<ul>\n<li><strong>HTML</strong> – Defines the structure of the page.</li>\n<li><strong>CSS</strong> – Styles the page.</li>\n<li><strong>JavaScript</strong> – Adds interactivity and logic.</li>\n</ul>\n<p>Example:\n```html</p>\n<!DOCTYPE html>\n<html>\n  <head>\n    <title>My Web App</title>\n    <style>\n      button { padding: 10px; background: blue; color: white; }\n    </style>\n  </head>\n  <body>\n    <h1>Hello World!</h1>\n    <button onclick=\"sayHello()\">Click Me</button>\n\n    <script>\n      function sayHello() {\n        alert(\"Hello from JavaScript!\");\n      }\n    </script>\n  </body>\n</html>\n<p>```\nI also made these two small projects:\n- https://github.com/m3hr4nn/wsdl-to-docx-converter\n- https://github.com/m3hr4nn/wsdl-to-xlsx-converter</p>",
        "updated": "2025-07-28T20:04:26.566147"
    },
    {
        "category": "ELK",
        "title": "index-mgmt-elasticsearch",
        "path": "ELK/index-mgmt-elasticsearch.md",
        "html": "<h3>creating elastsicsearch index</h3>\n<p><code>bash\ncurl -u user:pass -XPUT 'localhost:9200/myindex/?pretty'</code></p>\n<h3>creating an index and put document directly to it</h3>\n<blockquote>\n<p>Fixed Command (Modern Elasticsearch 7.x+):\n<code>bash\ncurl -u user:pass -XPUT 'localhost:9200/myindex/_doc/1?pretty' \\\n  -H 'Content-Type: application/json' \\\n  -d '{\n    \"book_name\": \"learning elk\"\n  }'</code>\nOr for older Elasticsearch versions (6.x and below):\n<code>bash\ncurl -u user:pass -XPUT 'localhost:9200/myindex/elk/1?pretty' \\\n  -H 'Content-Type: application/json' \\\n  -d '{\n    \"book_name\": \"learning elk\"\n  }'</code></p>\n</blockquote>\n<h3>Retrieving the document</h3>\n<p><code>bash\ncurl -u user:pass -XGET 'localhost:9200/myindex/_doc/1?pretty'\n{\n  \"_index\" : \"myindex\",\n  \"_id\" : \"1\",\n  \"_version\" : 1,\n  \"_seq_no\" : 0,\n  \"_primary_term\" : 1,\n  \"found\" : true,\n  \"_source\" : {\n    \"book_name\" : \"learning elk\"\n  }\n}</code></p>\n<blockquote>\n<p>Deleting Document:</p>\n</blockquote>\n<p><code>bash\ncurl -u user:pass -XDELETE 'localhost:9200/myindex/_doc/1?pretty'\n{\n  \"_index\" : \"myindex\",\n  \"_id\" : \"1\",\n  \"_version\" : 2,\n  \"result\" : \"deleted\",\n  \"_shards\" : {\n    \"total\" : 2,\n    \"successful\" : 1,\n    \"failed\" : 0\n  },\n  \"_seq_no\" : 1,\n  \"_primary_term\" : 1\n}</code></p>\n<blockquote>\n<p>Deleting index:\n<code>bash\ncurl -u user:pass -XDELETE 'localhost:9200/myindex?pretty'\n{\n  \"acknowledged\" : true\n}</code> </p>\n</blockquote>",
        "updated": "2025-07-28T20:04:26.565147"
    },
    {
        "category": "ELK",
        "title": "basic-elasticsearch",
        "path": "ELK/basic-elasticsearch.md",
        "html": "<h3>basic posts to elasticsearch API</h3>\n<p><code>bash\ncurl -X&lt;VERB&gt; '&lt;PROTOCOL&gt;:&lt;HOST&gt;:&lt;PORT&gt;/&lt;PATH&gt;/&lt;OPERATION_STRING&gt;?&lt;QUERY_STRING&gt;' -d '&lt;BODY&gt;'</code>\nI started an elasticsearch and kibana for local testing, these were my practice:</p>\n<ul>\n<li>\n<p>checking all available indices:\n<code>bash\ncurl -u user:pass -XGET 'localhost:9200/_cat/indices?v'</code></p>\n</li>\n<li>\n<p>listing nodes in a cluster:\n<code>bash\n  curl -u user:pass -XGET 'localhost:9200/_cat/nodes?v'</code></p>\n</li>\n<li>\n<p>health of the cluster:\n<code>bash\ncurl -u user:pass -XGET 'localhost:9200/_cluster/health?pretty=true'</code></p>\n</li>\n<li>creating an index:</li>\n</ul>\n<p>Elasticsearch has specific naming rules and conventions:\nRequired Rules:\n0) Must be lowercase\n1) Cannot contain: \\, /, *, ?, \", &lt;, &gt;, |,   (space), ,, #\n2) Cannot start with -, _, or +\n3) Cannot be . or ..\n4) Cannot be longer than 255 bytes</p>\n<p>Follow <strong>kebab-case</strong> <strong>or </strong>snake_case** if the index naming is long.</p>\n<p>Wrong example\n<code>bash\n$ curl -u user:pass -XPUT 'localhost:9200/MyIndex/?pretty'</code>\n<code>JSON\n{\n  \"error\" : {\n    \"root_cause\" : [\n      {\n        \"type\" : \"invalid_index_name_exception\",\n        \"reason\" : \"Invalid index name [MyIndex], must be lowercase\",\n        \"index_uuid\" : \"_na_\",\n        \"index\" : \"MyIndex\"\n      }\n    ],\n    \"type\" : \"invalid_index_name_exception\",\n    \"reason\" : \"Invalid index name [MyIndex], must be lowercase\",\n    \"index_uuid\" : \"_na_\",\n    \"index\" : \"MyIndex\"\n  },\n  \"status\" : 400\n}</code>\nCorrect example\n<code>bash\n$ curl -u user:pass -XPUT 'localhost:9200/myindex/?pretty'</code>\nResult: \n<code>JSON\n{\n  \"acknowledged\" : true,\n  \"shards_acknowledged\" : true,\n  \"index\" : \"myindex\"\n}</code></p>",
        "updated": "2025-07-28T20:04:26.565147"
    },
    {
        "category": "Hardware",
        "title": "asus-xl550-bluetooth-tshoot",
        "path": "Hardware/asus-xl550-bluetooth-tshoot.md",
        "html": "<h1>Linux Mint: Enabling Broadcom BCM43142A0 Bluetooth</h1>\n<p>This document describes the exact steps taken to get a Broadcom BCM43142A0 USB Bluetooth adapter working on Linux Mint. The firmware file was obtained from the winterheart GitHub repository.</p>\n<hr />\n<h2>1. Identify the Adapter</h2>\n<p>```bash\nlsusb | grep -i bluetooth</p>\n<h1>Bus 002 Device 004: ID 04ca:2006 Lite-On Technology Corp. Broadcom BCM43142A0 Bluetooth Device</h1>\n<p>```</p>\n<ul>\n<li><strong>Vendor ID:</strong> 04ca</li>\n<li><strong>Product ID:</strong> 2006</li>\n<li><strong>Chipset:</strong> BCM43142A0</li>\n</ul>\n<h2>2. Download &amp; Install Firmware</h2>\n<p>Create the firmware directory:</p>\n<p><code>bash\nsudo mkdir -p /lib/firmware/brcm</code></p>\n<p>Download the .hcd blob from GitHub:</p>\n<p><code>bash\ncd /tmp\nwget https://raw.githubusercontent.com/winterheart/broadcom-bt-firmware/master/brcm/BCM43142A0-04ca-2006.hcd</code></p>\n<p>Copy the file into the firmware directory:</p>\n<p><code>bash\nsudo cp BCM43142A0-04ca-2006.hcd /lib/firmware/brcm/</code></p>\n<h2>3. Reload the Bluetooth USB Driver</h2>\n<p><code>bash\nsudo modprobe -r btusb\nsudo modprobe btusb</code></p>\n<h2>4. Verify Firmware Loading</h2>\n<p><code>bash\ndmesg | grep -i BCM43142A0</code></p>\n<p>Expected output snippet:</p>\n<p><code>Bluetooth: hci0: BCM: 'brcm/BCM43142A0-04ca-2006.hcd'\nBluetooth: hci0: BCM43142A0 patch completed</code></p>\n<h2>5. Unblock Bluetooth (rfkill)</h2>\n<p>Check block status:</p>\n<p><code>bash\nrfkill list all</code></p>\n<p>If \"Soft blocked: yes\", unblock:</p>\n<p><code>bash\nsudo rfkill unblock bluetooth</code></p>\n<p>If \"Hard blocked: yes\", toggle your laptop's Bluetooth/airplane-mode key or check BIOS.</p>\n<p>Confirm both are no:</p>\n<p>```bash\nrfkill list all</p>\n<h1>Soft blocked: no</h1>\n<h1>Hard blocked: no</h1>\n<p>```</p>\n<h2>6. Bring Up the HCI Interface</h2>\n<p>```bash\nsudo hciconfig hci0 up\nhciconfig -a</p>\n<h1>Should show hci0 as UP RUNNING</h1>\n<p>```</p>\n<h2>7. Restart Bluetooth Service</h2>\n<p><code>bash\nsudo systemctl restart bluetooth</code></p>\n<h2>8. Pair &amp; Connect via bluetoothctl</h2>\n<p><code>bash\nbluetoothctl</code></p>\n<p>Inside the prompt:</p>\n<p>```bash\npower on\nagent on\ndefault-agent\nscan on</p>\n<h1>wait for your device to appear as [NEW] Device AA:BB:CC:DD:EE:FF <Name></h1>\n<p>pair AA:BB:CC:DD:EE:FF\ntrust AA:BB:CC:DD:EE:FF\nconnect AA:BB:CC:DD:EE:FF\nscan off\nquit\n```</p>\n<h2>9. (Optional) Audio Support for Headsets/Speakers</h2>\n<p><code>bash\nsudo apt install pulseaudio-module-bluetooth pavucontrol</code></p>\n<p>Restart services:</p>\n<p>```bash\npactl exit\nsudo systemctl restart bluetooth</p>\n<h1>Then use pavucontrol → Configuration to select A2DP</h1>\n<p>```</p>\n<h2>10. Final Check</h2>\n<ul>\n<li>No more \"Authentication Failed (0x05)\" or timeout errors in dmesg/journalctl -u bluetooth</li>\n<li>Devices appear and connect successfully in both bluetoothctl and the Mint GUI</li>\n<li>Audio devices available in PulseAudio</li>\n</ul>",
        "updated": "2025-07-28T20:04:26.565147"
    },
    {
        "category": "AI",
        "title": "prompt-engineering-tips",
        "path": "AI/prompt-engineering-tips.md",
        "html": "<h2>Example TIL Entries</h2>\n<h3>AI/prompt-engineering-tips.md</h3>\n<p>```markdown</p>\n<h1>Effective Prompt Engineering for LLMs</h1>\n<h2>Context</h2>\n<p>Learning how to write better prompts for large language models to get more accurate and useful responses.</p>\n<h2>Key Techniques</h2>\n<h3>1. Be Specific and Clear</h3>\n<p>Instead of: \"Help me with Python\"\nUse: \"Show me how to read a CSV file in Python using pandas and handle missing values\"</p>\n<h3>2. Provide Context</h3>\n<p>```python</p>\n<h1>Instead of asking \"Fix this code\"</h1>\n<h1>Provide context like:</h1>\n<h1>\"This Python function should calculate fibonacci numbers but returns wrong results\"</h1>\n<p>def fibonacci(n):\n    if n &lt;= 1:\n        return n\n    return fibonacci(n-1) + fibonacci(n-2)</p>",
        "updated": "2025-07-28T20:04:26.565147"
    },
    {
        "category": "Linux",
        "title": "vim-tips",
        "path": "Linux/vim-tips.md",
        "html": "<h1>Vim Commands Cheatsheet</h1>\n<h2>Modes</h2>\n<ul>\n<li><strong>Normal Mode</strong>: Default mode for navigation and commands</li>\n<li><strong>Insert Mode</strong>: For typing text (<code>i</code>, <code>a</code>, <code>o</code>)</li>\n<li><strong>Visual Mode</strong>: For selecting text (<code>v</code>, <code>V</code>, <code>Ctrl+v</code>)</li>\n<li><strong>Command Mode</strong>: For ex commands (<code>:</code>)</li>\n</ul>\n<h2>Basic Navigation</h2>\n<h3>Character Movement</h3>\n<ul>\n<li><code>h</code> - Left</li>\n<li><code>j</code> - Down</li>\n<li><code>k</code> - Up</li>\n<li><code>l</code> - Right</li>\n</ul>\n<h3>Word Movement</h3>\n<ul>\n<li><code>w</code> - Next word</li>\n<li><code>b</code> - Previous word</li>\n<li><code>e</code> - End of word</li>\n<li><code>ge</code> - End of previous word</li>\n</ul>\n<h3>Line Movement</h3>\n<ul>\n<li><code>0</code> - Beginning of line</li>\n<li><code>^</code> - First non-blank character</li>\n<li><code>$</code> - End of line</li>\n<li><code>g_</code> - Last non-blank character</li>\n</ul>\n<h3>Screen Movement</h3>\n<ul>\n<li><code>H</code> - Top of screen</li>\n<li><code>M</code> - Middle of screen</li>\n<li><code>L</code> - Bottom of screen</li>\n<li><code>Ctrl+f</code> - Page down</li>\n<li><code>Ctrl+b</code> - Page up</li>\n<li><code>Ctrl+d</code> - Half page down</li>\n<li><code>Ctrl+u</code> - Half page up</li>\n</ul>\n<h3>File Movement</h3>\n<ul>\n<li><code>gg</code> - Go to first line</li>\n<li><code>G</code> - Go to last line</li>\n<li><code>:{number}</code> - Go to line number</li>\n<li><code>%</code> - Go to matching bracket</li>\n</ul>\n<h2>Editing</h2>\n<h3>Entering Insert Mode</h3>\n<ul>\n<li><code>i</code> - Insert before cursor</li>\n<li><code>I</code> - Insert at beginning of line</li>\n<li><code>a</code> - Insert after cursor</li>\n<li><code>A</code> - Insert at end of line</li>\n<li><code>o</code> - Open new line below</li>\n<li><code>O</code> - Open new line above</li>\n</ul>\n<h3>Deleting</h3>\n<ul>\n<li><code>x</code> - Delete character under cursor</li>\n<li><code>X</code> - Delete character before cursor</li>\n<li><code>dw</code> - Delete word</li>\n<li><code>dd</code> - Delete line</li>\n<li><code>D</code> - Delete to end of line</li>\n<li><code>d$</code> - Delete to end of line</li>\n<li><code>d0</code> - Delete to beginning of line</li>\n</ul>\n<h3>Copying (Yanking)</h3>\n<ul>\n<li><code>yw</code> - Yank word</li>\n<li><code>yy</code> - Yank line</li>\n<li><code>Y</code> - Yank line</li>\n<li><code>y$</code> - Yank to end of line</li>\n</ul>\n<h3>Pasting</h3>\n<ul>\n<li><code>p</code> - Paste after cursor</li>\n<li><code>P</code> - Paste before cursor</li>\n</ul>\n<h3>Changing</h3>\n<ul>\n<li><code>cw</code> - Change word</li>\n<li><code>cc</code> - Change line</li>\n<li><code>C</code> - Change to end of line</li>\n<li><code>r</code> - Replace single character</li>\n<li><code>R</code> - Replace mode</li>\n</ul>\n<h3>Undo/Redo</h3>\n<ul>\n<li><code>u</code> - Undo</li>\n<li><code>Ctrl+r</code> - Redo</li>\n<li><code>U</code> - Undo all changes on line</li>\n</ul>\n<h2>Visual Mode</h2>\n<ul>\n<li><code>v</code> - Character visual mode</li>\n<li><code>V</code> - Line visual mode</li>\n<li><code>Ctrl+v</code> - Block visual mode</li>\n<li><code>gv</code> - Reselect last visual selection</li>\n<li><code>o</code> - Move to other end of selection</li>\n</ul>\n<h2>Search and Replace</h2>\n<h3>Searching</h3>\n<ul>\n<li><code>/pattern</code> - Search forward</li>\n<li><code>?pattern</code> - Search backward</li>\n<li><code>n</code> - Next search result</li>\n<li><code>N</code> - Previous search result</li>\n<li><code>*</code> - Search for word under cursor (forward)</li>\n<li><code>#</code> - Search for word under cursor (backward)</li>\n</ul>\n<h3>Replace</h3>\n<ul>\n<li><code>:s/old/new/</code> - Replace first occurrence in line</li>\n<li><code>:s/old/new/g</code> - Replace all occurrences in line</li>\n<li><code>:%s/old/new/g</code> - Replace all occurrences in file</li>\n<li><code>:%s/old/new/gc</code> - Replace all with confirmation</li>\n</ul>\n<h2>File Operations</h2>\n<h3>Opening/Closing</h3>\n<ul>\n<li><code>:e filename</code> - Open file</li>\n<li><code>:w</code> - Save file</li>\n<li><code>:w filename</code> - Save as filename</li>\n<li><code>:q</code> - Quit</li>\n<li><code>:q!</code> - Quit without saving</li>\n<li><code>:wq</code> - Save and quit</li>\n<li><code>:x</code> - Save and quit (if changes)</li>\n<li><code>ZZ</code> - Save and quit</li>\n<li><code>ZQ</code> - Quit without saving</li>\n</ul>\n<h3>Multiple Files</h3>\n<ul>\n<li><code>:split filename</code> - Open file in horizontal split</li>\n<li><code>:vsplit filename</code> - Open file in vertical split</li>\n<li><code>Ctrl+w h/j/k/l</code> - Navigate between splits</li>\n<li><code>Ctrl+w c</code> - Close current split</li>\n<li><code>:tabnew filename</code> - Open file in new tab</li>\n<li><code>gt</code> - Next tab</li>\n<li><code>gT</code> - Previous tab</li>\n</ul>\n<h2>Buffers</h2>\n<ul>\n<li><code>:ls</code> - List buffers</li>\n<li><code>:b{number}</code> - Switch to buffer number</li>\n<li><code>:bn</code> - Next buffer</li>\n<li><code>:bp</code> - Previous buffer</li>\n<li><code>:bd</code> - Delete buffer</li>\n</ul>\n<h2>Marks and Jumps</h2>\n<ul>\n<li><code>ma</code> - Set mark 'a'</li>\n<li><code>'a</code> - Jump to mark 'a'</li>\n<li><code>''</code> - Jump to previous position</li>\n<li><code>Ctrl+o</code> - Jump to older position</li>\n<li><code>Ctrl+i</code> - Jump to newer position</li>\n</ul>\n<h2>Macros</h2>\n<ul>\n<li><code>qa</code> - Start recording macro 'a'</li>\n<li><code>q</code> - Stop recording macro</li>\n<li><code>@a</code> - Play macro 'a'</li>\n<li><code>@@</code> - Repeat last macro</li>\n</ul>\n<h2>Text Objects</h2>\n<ul>\n<li><code>iw</code> - Inner word</li>\n<li><code>aw</code> - A word (including spaces)</li>\n<li><code>is</code> - Inner sentence</li>\n<li><code>as</code> - A sentence</li>\n<li><code>ip</code> - Inner paragraph</li>\n<li><code>ap</code> - A paragraph</li>\n<li><code>i\"</code> - Inner quotes</li>\n<li><code>a\"</code> - A quotes (including quotes)</li>\n<li><code>i(</code> - Inner parentheses</li>\n<li><code>a(</code> - A parentheses</li>\n</ul>\n<h2>Folding</h2>\n<ul>\n<li><code>zf</code> - Create fold</li>\n<li><code>zo</code> - Open fold</li>\n<li><code>zc</code> - Close fold</li>\n<li><code>za</code> - Toggle fold</li>\n<li><code>zR</code> - Open all folds</li>\n<li><code>zM</code> - Close all folds</li>\n</ul>\n<h2>Useful Commands</h2>\n<ul>\n<li><code>.</code> - Repeat last command</li>\n<li><code>J</code> - Join lines</li>\n<li><code>~</code> - Toggle case</li>\n<li><code>gU</code> - Uppercase</li>\n<li><code>gu</code> - Lowercase</li>\n<li><code>&gt;&gt;</code> - Indent line</li>\n<li><code>&lt;&lt;</code> - Unindent line</li>\n<li><code>=</code> - Auto-indent</li>\n<li><code>Ctrl+n</code> - Auto-complete (in insert mode)</li>\n<li><code>Ctrl+x Ctrl+f</code> - File name completion</li>\n</ul>\n<h2>Settings</h2>\n<ul>\n<li><code>:set number</code> - Show line numbers</li>\n<li><code>:set relativenumber</code> - Show relative line numbers</li>\n<li><code>:set hlsearch</code> - Highlight search results</li>\n<li><code>:set ignorecase</code> - Ignore case in searches</li>\n<li><code>:set smartcase</code> - Smart case sensitivity</li>\n<li><code>:set autoindent</code> - Auto-indent new lines</li>\n<li><code>:set expandtab</code> - Use spaces instead of tabs</li>\n<li><code>:set tabstop=4</code> - Set tab width to 4 spaces</li>\n<li><code>:noh</code> - Clear search highlighting</li>\n</ul>\n<h2>Quick Tips</h2>\n<ul>\n<li>Use <code>Ctrl+[</code> or <code>Esc</code> to exit insert mode</li>\n<li>Use <code>:help command</code> to get help on any command</li>\n<li>Use <code>vimtutor</code> command in terminal for interactive tutorial</li>\n<li>Most commands can be prefixed with numbers for repetition (e.g., <code>5dd</code> deletes 5 lines)</li>\n<li>Combine operators with motions (e.g., <code>d3w</code> deletes 3 words)</li>\n</ul>",
        "updated": "2025-07-28T20:04:26.566147"
    },
    {
        "category": "Linux",
        "title": "powerpath_ultrapath_multipath_hdlm",
        "path": "Linux/powerpath_ultrapath_multipath_hdlm.md",
        "html": "<h1>Storage Multipathing Solutions Guide</h1>\n<h2>Overview</h2>\n<p>Storage multipathing is a critical technology that provides redundancy, load balancing, and high availability for connections between servers and storage systems. This guide covers four major multipathing solutions: UltraPath, Multipath, PowerPath, and HDLM (Hitachi Dynamic Link Manager).</p>\n<h2>What is Multipathing?</h2>\n<p>Multipathing enables a server to access storage devices through multiple physical paths, providing:\n- <strong>Redundancy</strong>: If one path fails, others remain available\n- <strong>Load balancing</strong>: Distributes I/O across multiple paths for better performance\n- <strong>High availability</strong>: Automatic failover and failback capabilities\n- <strong>Path optimization</strong>: Intelligent path selection based on performance metrics</p>\n<hr />\n<h2>1. UltraPath (Huawei)</h2>\n<h3>What is UltraPath?</h3>\n<p>UltraPath is Huawei's proprietary multipathing software designed specifically for OceanStor storage systems. It provides intelligent path management with advanced load balancing and failover capabilities.</p>\n<h3>Key Features</h3>\n<ul>\n<li><strong>LUN masking</strong>: Eliminates redundant LUN visibility</li>\n<li><strong>Optimum path selection</strong>: Automatically selects the best performing paths</li>\n<li><strong>I/O load balancing</strong>: Distributes workload across available paths</li>\n<li><strong>Automatic failover/failback</strong>: Seamless path switching during failures</li>\n<li><strong>Storage-specific optimization</strong>: Tailored for Huawei storage arrays</li>\n</ul>\n<h3>Requirements</h3>\n<ul>\n<li><strong>Operating Systems</strong>: Linux (RHEL, SUSE, Ubuntu), Windows, AIX, Solaris</li>\n<li><strong>Storage</strong>: Huawei OceanStor series storage systems</li>\n<li><strong>Connectivity</strong>: FC, iSCSI, or FCoE connections</li>\n<li><strong>Memory</strong>: Minimum 512MB RAM</li>\n<li><strong>Disk Space</strong>: 50-100MB for installation</li>\n</ul>\n<h3>Installation and Usage</h3>\n<p>```bash</p>\n<h1>Linux installation example</h1>\n<p>sudo rpm -ivh UltraPath-[version].rpm\nsudo /opt/UltraPath/bin/upadm show host\nsudo /opt/UltraPath/bin/upadm show path\n```</p>\n<h3>Management Commands</h3>\n<p>```bash</p>\n<h1>View path status</h1>\n<p>upadm show path</p>\n<h1>View LUN information</h1>\n<p>upadm show lun</p>\n<h1>Configure path policy</h1>\n<p>upadm config policy -dev [device] -policy [round-robin|failover]</p>\n<h1>Monitor path performance</h1>\n<p>upadm show perf\n```</p>\n<hr />\n<h2>2. Native Multipath (Linux DM-Multipath)</h2>\n<h3>What is DM-Multipath?</h3>\n<p>Device Mapper Multipath (DM-Multipath) is the native Linux multipathing solution included in most Linux distributions. It's vendor-agnostic and supports a wide range of storage arrays.</p>\n<h3>Key Features</h3>\n<ul>\n<li><strong>Open source</strong>: Free and included with Linux distributions</li>\n<li><strong>Vendor agnostic</strong>: Works with most storage vendors</li>\n<li><strong>Configurable policies</strong>: Multiple load balancing algorithms</li>\n<li><strong>Integration</strong>: Built into the Linux kernel</li>\n<li><strong>Extensive logging</strong>: Detailed path status and performance metrics</li>\n</ul>\n<h3>Requirements</h3>\n<ul>\n<li><strong>Operating Systems</strong>: Linux distributions (kernel 2.6+)</li>\n<li><strong>Storage</strong>: Most enterprise storage arrays</li>\n<li><strong>Connectivity</strong>: FC, iSCSI, SAS connections</li>\n<li><strong>Packages</strong>: device-mapper-multipath, multipath-tools</li>\n</ul>\n<h3>Installation and Configuration</h3>\n<p>```bash</p>\n<h1>Install multipath packages (RHEL/CentOS)</h1>\n<p>sudo yum install device-mapper-multipath</p>\n<h1>Ubuntu/Debian</h1>\n<p>sudo apt-get install multipath-tools</p>\n<h1>Generate default configuration</h1>\n<p>sudo mpathconf --enable --with_multipathd y</p>\n<h1>Edit configuration</h1>\n<p>sudo vi /etc/multipath.conf\n```</p>\n<h3>Basic Configuration Example</h3>\n<p>```bash</p>\n<h1>/etc/multipath.conf</h1>\n<p>defaults {\n    user_friendly_names yes\n    path_grouping_policy failover\n    failback immediate\n    rr_weight priorities\n}</p>\n<p>blacklist {\n    devnode \"^(ram|raw|loop|fd|md|dm-|sr|scd|st)[0-9]*\"\n    devnode \"^hd[a-z]\"\n}\n```</p>\n<h3>Management Commands</h3>\n<p>```bash</p>\n<h1>Show multipath status</h1>\n<p>sudo multipath -ll</p>\n<h1>Reload configuration</h1>\n<p>sudo systemctl reload multipathd</p>\n<h1>Add new paths</h1>\n<p>sudo multipath -r</p>\n<h1>Remove failed paths</h1>\n<p>sudo multipath -f [device]\n```</p>\n<hr />\n<h2>3. PowerPath (Dell EMC)</h2>\n<h3>What is PowerPath?</h3>\n<p>PowerPath is Dell EMC's enterprise-grade multipathing software that provides advanced path management, load balancing, and performance optimization specifically designed for EMC storage arrays.</p>\n<h3>Key Features</h3>\n<ul>\n<li><strong>Advanced algorithms</strong>: Proprietary load balancing optimized for EMC arrays</li>\n<li><strong>Migration enabler</strong>: Supports non-disruptive data migration</li>\n<li><strong>PowerPath/VE</strong>: Virtual environment optimization</li>\n<li><strong>Comprehensive monitoring</strong>: Detailed performance and health metrics</li>\n<li><strong>Enterprise support</strong>: Commercial support and regular updates</li>\n</ul>\n<h3>Requirements</h3>\n<ul>\n<li><strong>Operating Systems</strong>: Linux, Windows, AIX, Solaris, HP-UX, VMware</li>\n<li><strong>Storage</strong>: Dell EMC arrays (VNX, VMAX, Unity, PowerMax)</li>\n<li><strong>Connectivity</strong>: FC, iSCSI connections</li>\n<li><strong>License</strong>: Commercial license required</li>\n<li><strong>Memory</strong>: 1GB RAM recommended</li>\n</ul>\n<h3>Installation Process</h3>\n<p>```bash</p>\n<h1>Linux installation</h1>\n<p>sudo rpm -ivh EMCpower.LINUX-[version].rpm\nsudo /etc/init.d/PowerPath start</p>\n<h1>Windows</h1>\n<h1>Run PowerPath installer with administrator privileges</h1>\n<h1>Follow GUI installation wizard</h1>\n<p>```</p>\n<h3>Management Commands</h3>\n<p>```bash</p>\n<h1>View PowerPath devices</h1>\n<p>powermt display</p>\n<h1>Show path status</h1>\n<p>powermt display dev=all</p>\n<h1>Set load balancing policy</h1>\n<p>powermt config class=clariion policy=co</p>\n<h1>Remove failed paths</h1>\n<p>powermt remove hba=[hba_number]</p>\n<h1>Restore paths</h1>\n<p>powermt restore\n```</p>\n<h3>PowerPath Policies</h3>\n<ul>\n<li><strong>CLAROpt</strong>: Optimized for Dell EMC arrays</li>\n<li><strong>SymmOpt</strong>: Optimized for Symmetrix arrays</li>\n<li><strong>BasicFailover</strong>: Simple active/passive failover</li>\n<li><strong>RoundRobin</strong>: Distributes I/O across all paths</li>\n</ul>\n<hr />\n<h2>4. HDLM (Hitachi Dynamic Link Manager)</h2>\n<h3>What is HDLM?</h3>\n<p>Hitachi Dynamic Link Manager (HDLM) is Hitachi's multipathing software designed for optimal performance with Hitachi storage systems, providing intelligent path management and load distribution.</p>\n<h3>Key Features</h3>\n<ul>\n<li><strong>Dynamic load balancing</strong>: Real-time path optimization</li>\n<li><strong>Automatic failover</strong>: Seamless path switching</li>\n<li><strong>Performance monitoring</strong>: Comprehensive I/O statistics</li>\n<li><strong>Storage optimization</strong>: Tailored for Hitachi arrays</li>\n<li><strong>Multiple OS support</strong>: Cross-platform compatibility</li>\n</ul>\n<h3>Requirements</h3>\n<ul>\n<li><strong>Operating Systems</strong>: Linux, Windows, AIX, Solaris, HP-UX</li>\n<li><strong>Storage</strong>: Hitachi storage systems (VSP, HUS, AMS series)</li>\n<li><strong>Connectivity</strong>: FC, iSCSI connections</li>\n<li><strong>License</strong>: Included with Hitachi storage systems</li>\n<li><strong>Memory</strong>: 512MB RAM minimum</li>\n</ul>\n<h3>Installation and Management</h3>\n<p>```bash</p>\n<h1>Linux installation</h1>\n<p>sudo rpm -ivh HDLM-[version].rpm\nsudo /opt/DynamicLinkManager/bin/dlnkmgr</p>\n<h1>View path status</h1>\n<p>dlnkmgr view -path</p>\n<h1>Show LUN information</h1>\n<p>dlnkmgr view -lu</p>\n<h1>Set path policy</h1>\n<p>dlnkmgr set -lbtype rr -lu [LUN_ID]\n```</p>\n<hr />\n<h2>Comparison Matrix</h2>\n<p>| Feature | UltraPath | Native Multipath | PowerPath | HDLM |\n|---------|-----------|-----------------|-----------|------|\n| <strong>Vendor</strong> | Huawei | Open Source | Dell EMC | Hitachi |\n| <strong>Cost</strong> | Free with Huawei storage | Free | Commercial license | Free with Hitachi storage |\n| <strong>Storage Compatibility</strong> | Huawei OceanStor | Multi-vendor | EMC/Dell arrays | Hitachi arrays |\n| <strong>OS Support</strong> | Linux, Windows, AIX, Solaris | Linux primarily | Multi-platform | Multi-platform |\n| <strong>Performance Optimization</strong> | Huawei-specific | Generic | EMC-optimized | Hitachi-optimized |\n| <strong>Load Balancing</strong> | Advanced | Basic to Advanced | Advanced | Advanced |\n| <strong>GUI Management</strong> | Available | Limited | Comprehensive | Available |\n| <strong>Enterprise Features</strong> | Yes | Limited | Extensive | Yes |\n| <strong>Migration Support</strong> | Basic | Limited | Advanced | Basic |</p>\n<h2>Performance Characteristics</h2>\n<h3>UltraPath</h3>\n<ul>\n<li><strong>Best for</strong>: Huawei storage environments</li>\n<li><strong>Performance</strong>: Optimized algorithms for OceanStor arrays</li>\n<li><strong>Scalability</strong>: Supports large-scale deployments</li>\n</ul>\n<h3>Native Multipath</h3>\n<ul>\n<li><strong>Best for</strong>: Mixed vendor environments, cost-conscious deployments</li>\n<li><strong>Performance</strong>: Good generic performance across vendors</li>\n<li><strong>Scalability</strong>: Handles moderate to large environments</li>\n</ul>\n<h3>PowerPath</h3>\n<ul>\n<li><strong>Best for</strong>: Dell EMC storage environments requiring maximum performance</li>\n<li><strong>Performance</strong>: Superior performance with EMC arrays</li>\n<li><strong>Scalability</strong>: Enterprise-grade scalability</li>\n</ul>\n<h3>HDLM</h3>\n<ul>\n<li><strong>Best for</strong>: Hitachi storage environments</li>\n<li><strong>Performance</strong>: Optimized for Hitachi array characteristics</li>\n<li><strong>Scalability</strong>: Supports enterprise deployments</li>\n</ul>\n<h2>Best Practices</h2>\n<h3>General Guidelines</h3>\n<ol>\n<li><strong>Use vendor-specific solutions</strong> when possible for optimal performance</li>\n<li><strong>Avoid mixing multipathing solutions</strong> on the same host</li>\n<li><strong>Monitor path health</strong> regularly using built-in tools</li>\n<li><strong>Test failover scenarios</strong> in non-production environments</li>\n<li><strong>Keep software updated</strong> to latest supported versions</li>\n</ol>\n<h3>Configuration Recommendations</h3>\n<ul>\n<li>Configure appropriate timeout values for your environment</li>\n<li>Set up monitoring and alerting for path failures</li>\n<li>Document your multipathing configuration</li>\n<li>Regularly review and optimize load balancing policies</li>\n<li>Ensure proper zoning and LUN masking at the storage level</li>\n</ul>\n<h3>Troubleshooting Tips</h3>\n<ul>\n<li>Check physical connectivity first (cables, HBAs, switches)</li>\n<li>Verify storage array configuration and zoning</li>\n<li>Review multipath logs for error patterns</li>\n<li>Use vendor-specific diagnostic tools</li>\n<li>Test individual paths manually when issues occur</li>\n</ul>\n<h2>Conclusion</h2>\n<p>The choice of multipathing solution depends on your storage environment, budget, and performance requirements. Vendor-specific solutions like UltraPath, PowerPath, and HDLM typically provide the best performance and features for their respective storage platforms, while native multipath offers flexibility and cost savings in mixed environments.</p>\n<p>For optimal results, align your multipathing solution with your primary storage vendor and ensure proper configuration, monitoring, and maintenance procedures are in place.</p>",
        "updated": "2025-07-28T20:04:26.566147"
    }
]